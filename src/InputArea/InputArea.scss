@import '../common.scss';
@import './InputAreaMixins.scss';
@import '../typography-helpers.scss';
@import '../mixins.scss';

$input-area-padding-exclamation: 34px;
$input-area-padding-horizontal: 12px;
$input-area-padding-top: 6px;
$gap: 6px;

.status {
  position: absolute;
  right: 6px;
  top: 0;
  margin: 6px;
}

.wrapper {
  position: relative;
}

.root {
  position: relative;
  display: flex;
  align-items: stretch;
  border: solid 1px;
  border-radius: 6px;
  @include BoxSizing();
  @include FontRoman();

  &.disabled textarea::placeholder {
    color: $D10-30;
  }

  @include ThemeDefault(
    $color: $D10,
    $borderColor: $B30,
    $backgroundColor: $D80
  );
  @include ThemeHover($backgroundColor: $B50);
  @include ThemeFocus;
  @include ThemeError($borderColor: $paletteR1);
  @include ThemeWarning($borderColor: $paletteR5);
  @include ThemeDisabled(
    $borderColor: $D10-20,
    $backgroundColor: $D80,
    $color: $D10-30
  );
}

.inputArea {
  flex-grow: 1;
  flex-shrink: 1;
  min-width: 20px;
  min-height: 36px;
  padding: $input-area-padding-top $input-area-padding-horizontal;
  margin: 0;
  border: 0;
  outline: 0;
  background: transparent;
  cursor: auto;
  @include TextSizeAndFontFamily($size: medium, $weight: normal);

  @include Placeholder(getTextColor($light: true, $secondary: true));
  @include Selection($paletteB4);
  @include default-scroll-bar();
  &::-webkit-scrollbar-thumb {
    height: 30px;
  }

  &::-webkit-scrollbar {
    border-radius: 0 6px 6px 0;
  }

  &.sizeSmall {
    @include TextSizeAndFontFamily($size: small, $weight: normal);
  }
}

.counter {
  position: absolute;
  top: -30px;
  right: 0;
  font-size: 14px;
  line-height: 1.3;
  @include Placeholder($GR60);
  color: $D40;
}

.hasStatus {
  &> .inputArea {
    padding-right: $input-area-padding-exclamation;
  }
}

.resizable > textarea {
  resize: vertical;
}

.nonResizable > textarea {
  resize: none;
}

// RTL layout based on global style set on document body or parent element.
@include withRTL() {

  .status {
    position: absolute;
    left: 6px;
    top: 0;
    right: auto;
  }

  .inputArea {
    direction: rtl;
  }
  .counter {
    right: auto;
  }
  .hasStatus {
    &> .inputArea {
      padding-left: $input-area-padding-exclamation;
      padding-right: $input-area-padding-horizontal;
    }
  }
}
